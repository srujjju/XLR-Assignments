# -*- coding: utf-8 -*-
"""simple linear regression(Delivery_time)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hoIQLEgc97oQ-d6yrGwzlkRhLgPiMijL
"""

from google.colab import files
uploded = files.upload()

import pandas as pd
file = pd.read_csv('delivery_time.csv')
file.head()

X = file['Sorting Time'].values.reshape(-1,1)
Y = file['Delivery Time']
#checking for outlayers
import matplotlib.pyplot as plt
plt.boxplot(X)
plt.show()
plt.boxplot(Y)
plt.show()
#checking for none values
file.isnull().sum()

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size = 0.3)
#fitting the model
from sklearn.linear_model import LinearRegression
df = LinearRegression()
df.fit(x_train,y_train)
y_pred_train = df.predict(x_train)
y_pred_test = df.predict(x_test)
#RMSE
from sklearn.metrics import mean_squared_error
import numpy as np
y_pred_train = mean_squared_error(y_train,y_pred_train)
y_pred_test = mean_squared_error(y_test,y_pred_test)
print('root mean squre error for Y pred train',np.sqrt(y_pred_train))
print('root mean squre error for Y pred test',np.sqrt(y_pred_test))
#crosss validetion
for i in range(100):
  x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size = 0.3,random_state = i)
  df = LinearRegression()
  df.fit(x_train,y_train)
  y_pred_train = df.predict(x_train)
  y_pred_test = df.predict(x_test)
  y_pred_train = mean_squared_error(y_train,y_pred_train)
  y_pred_test = mean_squared_error(y_test,y_pred_test)

print('root mean squre error for Y pred train',np.sqrt(y_pred_train))
print('root mean squre error for Y pred test',np.sqrt(y_pred_test))