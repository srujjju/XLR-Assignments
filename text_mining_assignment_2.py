# -*- coding: utf-8 -*-
"""Text Mining assignment 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ReDy1MWFr0ld_Gz33FYgD-gHvoPIJ-1D
"""

reviews = {
    "XYZ Wireless Earbuds": [
        "I've been using these wireless earbuds for a few weeks now, and I must say, I'm impressed! The sound quality is fantastic, with crisp highs and deep bass. They fit snugly in my ears and are comfortable to wear for extended periods. The battery life is excellent, lasting me through long commutes and workouts without needing to recharge. Overall, highly recommended!",

        "These wireless earbuds are amazing! I love the sleek design and how comfortable they are to wear. The sound quality is top-notch, and they stay connected to my devices without any issues. The battery life is impressive, lasting me through my entire workday. Definitely worth the investment!",

        "I purchased these wireless earbuds for running, and they have exceeded my expectations! They stay in place during my workouts, and the sound quality is fantastic, keeping me motivated with my favorite tunes. The battery life is excellent, lasting me through multiple runs without needing a recharge. Highly recommended for active lifestyles!",

        "These wireless earbuds are a huge disappointment. The sound quality is very bad, and they constantly disconnect from my devices. The battery life is abysmal, barely lasting a few hours. Save your money and don't bye this."
    ],

    "ABC Smart Watch": [
        "I recently purchased the ABC Smart Watch, and it has exceeded my expectations. The design is sleek and modern, and the touchscreen is responsive and easy to navigate. I love the variety of health tracking features, including heart rate monitoring and sleep tracking. The battery life is impressive, lasting me several days on a single charge. It's become an essential part of my daily routine!",

        "This smartwatch is fantastic! I've been using it to track my workouts and monitor my sleep patterns, and it provides detailed insights that help me stay on top of my health goals. The battery life is excellent, lasting me through long days without needing to recharge. The sleek design looks great with any outfit. Highly recommend!",

        "I've tried several smartwatches in the past, but the ABC Smart Watch stands out for its reliability and functionality. The touchscreen is responsive, and the interface is intuitive to navigate. I appreciate the variety of workout modes available, catering to different fitness activities. The battery life is impressive, lasting me over a week on a single charge. Overall, a great investment for anyone looking to improve their health and fitness!",

        "Do not waste your money on this smartwatch. The design is clunky, and the touchscreen is unresponsive. The health tracking features are inaccurate, providing unreliable data. The battery life is disappointing, barely lasting a day with minimal usage. Look elsewhere for a better smartwatch option."
    ]
}

review_list = []
for product, product_reviews  in reviews.items():

  for i in  range(len(product_reviews)):
    print(product_reviews[i])
    review_list.append(product_reviews[i])

review_list

#To remove punctuation and make all text into lower case
import string
review_without_punctuation = []

for i in range(len(review_list)):
  no_punc_text = review_list[1].translate(str.maketrans('','',string.punctuation))
  no_punc_text_lower = no_punc_text.lower()
  review_without_punctuation.append(no_punc_text_lower)
review_without_punctuation

from nltk.corpus import stopwords

stop_words = stopwords.words('english')

review_without_stopwords_all = []
for review in review_without_punctuation:
  without_stopwords = [word for word in review.split() if word not in stop_words]
  review_without_stopwords_all.append(without_stopwords)
review_without_stopwords_all

# stemming

from nltk.stem.porter import PorterStemmer

stemmer = PorterStemmer()

stemmed_review = []
for review in review_without_stopwords_all:
  stemmed_review.append([stemmer.stem(word) for word in review])
stemmed_review

from collections import Counter
word_counter_list = []
for review in stemmed_review:
  word_counter = Counter(review)
  word_counter_list.append(word_counter)
word_counter_list

from textblob import TextBlob

emotion_list = []

for review in review_list:
  blob = TextBlob(review)
  emotion_list.append(blob.sentiment.polarity)

print(emotion_list)

positive_reviews = [review for review, emotion in zip(review_list, emotion_list) if emotion > 0]
negative_reviews = [review for review, emotion in zip(review_list, emotion_list) if emotion < 0]
neutral_reviews = [review for review, emotion in zip(review_list, emotion_list) if emotion == 0]

print("Positive Reviews:")
for review in positive_reviews:
  print(review)

print("\nNegative Reviews:")
for review in negative_reviews:
  print(review)

print("\nNeutral Reviews:")
for review in neutral_reviews:
  print(review)